<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Swap Sheet' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Vehicle Info&quot;'>
        <calculation class='tableau' formula='&quot;Vehicle Info&quot;' />
        <members>
          <member value='&quot;Dealer cost&quot;' />
          <member value='&quot;Vehicle Info&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Inventory+ (Vehicles - Data Interpreter)' inline='true' name='federated.19lx1a014aekif148kh1m16lhc7t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vehicles - Data Interpreter' name='excel-direct.07vqs570lhct5f1a9919g0c205j8'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='E:/iit/tableau/learnit/Expert/Vehicles - Data Interpreter.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Inventory].[VIN]' />
              <expression op='[Pricing].[VIN]' />
            </expression>
          </clause>
          <relation connection='excel-direct.07vqs570lhct5f1a9919g0c205j8' name='Inventory' table='[Inventory$]' type='table'>
            <columns gridOrigin='A1:G107:no:A1:G107:1' header='yes' lost='0' outcome='1' processed='104'>
              <column datatype='string' name='VIN' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Make' ordinal='2' />
              <column datatype='real' name='Column1' ordinal='3' />
              <column datatype='string' name='Model' ordinal='4' />
              <column datatype='string' name='Classification' ordinal='5' />
              <column datatype='string' name='Color' ordinal='6' />
            </columns>
          </relation>
          <relation connection='excel-direct.07vqs570lhct5f1a9919g0c205j8' name='Pricing' table='[Pricing$]' type='table'>
            <columns gridOrigin='A1:C107:no:A1:C107:1' lost='0' outcome='1' processed='208'>
              <column datatype='string' name='VIN' ordinal='0' />
              <column datatype='integer' name='Dealer Cost' ordinal='1' />
              <column datatype='integer' name='MSRP' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Inventory].[VIN]' />
              <expression op='[Pricing].[VIN]' />
            </expression>
          </clause>
          <relation connection='excel-direct.07vqs570lhct5f1a9919g0c205j8' name='Inventory' table='[Inventory$]' type='table'>
            <columns gridOrigin='A1:G107:no:A1:G107:1' header='yes' lost='0' outcome='1' processed='104'>
              <column datatype='string' name='VIN' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Make' ordinal='2' />
              <column datatype='real' name='Column1' ordinal='3' />
              <column datatype='string' name='Model' ordinal='4' />
              <column datatype='string' name='Classification' ordinal='5' />
              <column datatype='string' name='Color' ordinal='6' />
            </columns>
          </relation>
          <relation connection='excel-direct.07vqs570lhct5f1a9919g0c205j8' name='Pricing' table='[Pricing$]' type='table'>
            <columns gridOrigin='A1:C107:no:A1:C107:1' lost='0' outcome='1' processed='208'>
              <column datatype='string' name='VIN' ordinal='0' />
              <column datatype='integer' name='Dealer Cost' ordinal='1' />
              <column datatype='integer' name='MSRP' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Classification]' value='[Inventory].[Classification]' />
          <map key='[Color]' value='[Inventory].[Color]' />
          <map key='[Column1]' value='[Inventory].[Column1]' />
          <map key='[Dealer Cost]' value='[Pricing].[Dealer Cost]' />
          <map key='[MSRP]' value='[Pricing].[MSRP]' />
          <map key='[Make]' value='[Inventory].[Make]' />
          <map key='[Model]' value='[Inventory].[Model]' />
          <map key='[VIN (Pricing)]' value='[Pricing].[VIN]' />
          <map key='[VIN]' value='[Inventory].[VIN]' />
          <map key='[Year]' value='[Inventory].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Inventory]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G107:no:A1:G107:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>104</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Pricing]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C107:no:A1:C107:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>208</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VIN]</local-name>
            <parent-name>[Inventory]</parent-name>
            <remote-alias>VIN</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Inventory]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Inventory]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Column1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Column1]</local-name>
            <parent-name>[Inventory]</parent-name>
            <remote-alias>Column1</remote-alias>
            <ordinal>3</ordinal>
            <hidden>true</hidden>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Inventory]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Classification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Classification]</local-name>
            <parent-name>[Inventory]</parent-name>
            <remote-alias>Classification</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Color]</local-name>
            <parent-name>[Inventory]</parent-name>
            <remote-alias>Color</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VIN (Pricing)]</local-name>
            <parent-name>[Pricing]</parent-name>
            <remote-alias>VIN</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dealer Cost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dealer Cost]</local-name>
            <parent-name>[Pricing]</parent-name>
            <remote-alias>Dealer Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MSRP]</local-name>
            <parent-name>[Pricing]</parent-name>
            <remote-alias>MSRP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inventory_D3B7EE0138064F1786C92232431BB269]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sheet Swap' datatype='string' name='[Calculation_843017620802174978]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='string' name='[Classification (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Classification]' new-bin='true'>
          <bin default-name='false' value='&quot;Car&quot;'>
            <value>&quot;Auto&quot;</value>
            <value>&quot;C&quot;</value>
            <value>&quot;Car&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Van/Minivan&quot;'>
            <value>&quot;V+M&quot;</value>
            <value>&quot;Van/Minivan&quot;</value>
            <value>&quot;VM&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Classification]' role='dimension' type='nominal' />
      <column datatype='string' name='[Color]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Blue&quot;' value='Dark Blue' />
          <alias key='&quot;Green&quot;' value='Forest Green' />
        </aliases>
      </column>
      <column datatype='real' hidden='true' name='[Column1]' role='measure' type='quantitative' />
      <column caption='Msrp' datatype='integer' name='[MSRP]' role='measure' type='quantitative' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column datatype='string' name='[Model (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Model]' new-bin='true'>
          <bin default-name='false' value='&quot;Eighty-Eight&quot;'>
            <value>&quot;Eighty-Eight&quot;</value>
            <value>&quot;Ninety-Nine&quot;</value>
            <value>&quot;Seventy-Seven&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Model]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[VIN (Pricing)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Inventory' datatype='table' name='[__tableau_internal_object_id__].[Inventory_D3B7EE0138064F1786C92232431BB269]' role='measure' type='quantitative' />
      <group caption='Action (Make,Model (group))' hidden='true' name='[Action (Make,Model (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make]' />
          <groupfilter function='level-members' level='[Model (group)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Swap Sheet' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Vehicle Info&quot;'>
          <calculation class='tableau' formula='&quot;Vehicle Info&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Inventory' id='Inventory_D3B7EE0138064F1786C92232431BB269'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Inventory].[VIN]' />
                    <expression op='[Pricing].[VIN]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.07vqs570lhct5f1a9919g0c205j8' name='Inventory' table='[Inventory$]' type='table'>
                  <columns gridOrigin='A1:G107:no:A1:G107:1' header='yes' lost='0' outcome='1' processed='104'>
                    <column datatype='string' name='VIN' ordinal='0' />
                    <column datatype='integer' name='Year' ordinal='1' />
                    <column datatype='string' name='Make' ordinal='2' />
                    <column datatype='real' name='Column1' ordinal='3' />
                    <column datatype='string' name='Model' ordinal='4' />
                    <column datatype='string' name='Classification' ordinal='5' />
                    <column datatype='string' name='Color' ordinal='6' />
                  </columns>
                </relation>
                <relation connection='excel-direct.07vqs570lhct5f1a9919g0c205j8' name='Pricing' table='[Pricing$]' type='table'>
                  <columns gridOrigin='A1:C107:no:A1:C107:1' lost='0' outcome='1' processed='208'>
                    <column datatype='string' name='VIN' ordinal='0' />
                    <column datatype='integer' name='Dealer Cost' ordinal='1' />
                    <column datatype='integer' name='MSRP' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_9FF660BD0D054AC099FFBEF3AA1370F2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sheet Swap' type='sheet' worksheet='Dealer cost' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sheet Swap' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Dealer cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0' fontsize='18'>Dealer Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Inventory+ (Vehicles - Data Interpreter)' name='federated.19lx1a014aekif148kh1m16lhc7t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Swap Sheet' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Vehicle Info&quot;'>
              <calculation class='tableau' formula='&quot;Vehicle Info&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19lx1a014aekif148kh1m16lhc7t'>
            <column caption='Sheet Swap' datatype='string' name='[Calculation_843017620802174978]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='integer' name='[Dealer Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Model]' new-bin='true'>
                <bin default-name='false' value='&quot;Eighty-Eight&quot;'>
                  <value>&quot;Eighty-Eight&quot;</value>
                  <value>&quot;Ninety-Nine&quot;</value>
                  <value>&quot;Seventy-Seven&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843017620802174978]' derivation='None' name='[none:Calculation_843017620802174978:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dealer Cost]' derivation='Sum' name='[sum:Dealer Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620802174978:nk]'>
            <groupfilter function='member' level='[none:Calculation_843017620802174978:nk]' member='&quot;Dealer cost&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620802174978:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)]' value='27' />
            <format attr='color' value='#00aa00' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#00aa00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)]' value='#00aa00' />
            <format attr='color' field='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk]' value='#53aa76' />
            <format attr='text-orientation' field='[federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)]' value='-90' />
            <format attr='color' field='[federated.19lx1a014aekif148kh1m16lhc7t].[sum:Dealer Cost:qk]' value='#00aa00' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-size' value='9' />
            <format attr='color' value='#00aa00' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='12' />
            <format attr='text-align' value='auto' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00aa00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='630' />
                <format attr='maxheight' value='630' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19lx1a014aekif148kh1m16lhc7t].[sum:Dealer Cost:qk]</rows>
        <cols>([federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk] / [federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)])</cols>
      </table>
      <simple-id uuid='{5DC0752C-7F67-4AD5-AA87-8A5B4C41FCA5}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2D4637E6-A511-4901-AFEE-64394DC554A4}' />
    </worksheet>
    <worksheet name='Vehicle Info'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0' fontsize='18'>Vechicle Info</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Inventory+ (Vehicles - Data Interpreter)' name='federated.19lx1a014aekif148kh1m16lhc7t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Swap Sheet' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Vehicle Info&quot;'>
              <calculation class='tableau' formula='&quot;Vehicle Info&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19lx1a014aekif148kh1m16lhc7t'>
            <column caption='Sheet Swap' datatype='string' name='[Calculation_843017620802174978]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Classification (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Classification]' new-bin='true'>
                <bin default-name='false' value='&quot;Car&quot;'>
                  <value>&quot;Auto&quot;</value>
                  <value>&quot;C&quot;</value>
                  <value>&quot;Car&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Van/Minivan&quot;'>
                  <value>&quot;V+M&quot;</value>
                  <value>&quot;Van/Minivan&quot;</value>
                  <value>&quot;VM&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Classification]' role='dimension' type='nominal' />
            <column caption='Msrp' datatype='integer' name='[MSRP]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Model]' new-bin='true'>
                <bin default-name='false' value='&quot;Eighty-Eight&quot;'>
                  <value>&quot;Eighty-Eight&quot;</value>
                  <value>&quot;Ninety-Nine&quot;</value>
                  <value>&quot;Seventy-Seven&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_843017620802174978]' derivation='None' name='[none:Calculation_843017620802174978:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[MSRP]' derivation='Sum' name='[sum:MSRP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19lx1a014aekif148kh1m16lhc7t].[Action (Make,Model (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_9FF660BD0D054AC099FFBEF3AA1370F2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19lx1a014aekif148kh1m16lhc7t].[Classification (group)]'>
            <groupfilter function='level-members' level='[Classification (group)]' />
          </filter>
          <filter class='categorical' column='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620802174978:nk]'>
            <groupfilter function='member' level='[none:Calculation_843017620802174978:nk]' member='&quot;Vehicle Info&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk]'>
            <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19lx1a014aekif148kh1m16lhc7t].[Classification (group)]</column>
            <column>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk]</column>
            <column>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620802174978:nk]</column>
            <column>[federated.19lx1a014aekif148kh1m16lhc7t].[Action (Make,Model (group))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Year:ok]' value='125' />
            <format attr='height' field='[federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)]' value='19' />
            <format attr='text-format' field='[federated.19lx1a014aekif148kh1m16lhc7t].[sum:MSRP:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='total-label' data-class='total' field='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Year:ok]' value='Grand Total of Both Years)' />
            <format attr='total-label' data-class='total' field='[federated.19lx1a014aekif148kh1m16lhc7t].[Classification (group)]' value='Grand Total By Year' />
            <format attr='total-label' data-class='total' field='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk]' value='Grand Total By Year' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#00aa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19lx1a014aekif148kh1m16lhc7t].[sum:MSRP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk] / ([federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)] / [federated.19lx1a014aekif148kh1m16lhc7t].[Classification (group)]))</rows>
        <cols total='true'>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{6C95D79C-577A-42CA-9EAF-E2C3C71BEEC1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Sheet Swap'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#ffffff' />
          <format attr='background-color' value='#00aa00' />
        </style-rule>
      </style>
      <size maxheight='840' maxwidth='1700' minheight='840' minwidth='1700' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Swap Sheet' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Vehicle Info&quot;'>
          <calculation class='tableau' formula='&quot;Vehicle Info&quot;' />
          <members>
            <member value='&quot;Dealer cost&quot;' />
            <member value='&quot;Vehicle Info&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98096' id='7' param='horz' type-v2='layout-flow' w='99058' x='471' y='952'>
            <zone h='98096' id='5' type-v2='layout-basic' w='99058' x='471' y='952' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11429' id='10' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15471' x='79882' y='2976' />
        <zone h='102381' id='3' name='Vehicle Info' show-title='false' w='65000' x='1100' y='1071' />
        <zone h='95714' id='11' name='Dealer cost' show-title='false' w='75118' x='1588' y='952'>
          <layout-cache fixed-size-h='942' fixed-size-w='283' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98096' id='14' param='vert' type-v2='layout-flow' w='99058' x='471' y='952'>
                <zone fixed-size='280' h='95714' id='11' is-fixed='true' name='Dealer cost' show-title='false' w='75118' x='1588' y='952'>
                  <layout-cache fixed-size-h='942' fixed-size-w='283' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='102381' id='3' is-fixed='true' name='Vehicle Info' show-title='false' w='65000' x='1100' y='1071'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11429' id='10' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15471' x='79882' y='2976'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6CC26F12-0785-42D1-8607-1306E8F778F7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Vehicle Info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk]' type='filter' />
          </strip>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.19lx1a014aekif148kh1m16lhc7t].[Classification (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[Classification (group)]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620801060865:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620802174978:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Classification:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Model:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D5ED718-3E25-4BC3-83CC-E8E5481088FD}' />
    </window>
    <window class='worksheet' maximized='true' name='Dealer cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[Model (group)]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620801060865:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Calculation_843017620802174978:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Make:nk]</field>
            <field>[federated.19lx1a014aekif148kh1m16lhc7t].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65923029-711B-4330-8104-745D5855D761}' />
    </window>
    <window class='dashboard' name='Sheet Swap'>
      <viewpoints>
        <viewpoint name='Dealer cost'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vehicle Info' />
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{3CC1ACC8-B543-4A65-AB93-902C1E001349}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{55BAF742-24C8-482A-97BB-560E6FECF74A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet Swap' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vehicle Info' width='192'>
      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
      feupViWAAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
